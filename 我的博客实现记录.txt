一、总体概要分析
blog的基本实现步骤：
分为三个部分：
1.前面的静态页面
	静态页面使用bootstrap作为样式，因为方便数据的渲染，模板引擎使用swig模板；
	同时对于一些特殊的需求样式，设置一个main.css来实现特殊需求样式；
	需要准备的静态页面有：
	main页面(主页面)
		->index页面，包含内容模块和登录模块
		->layout页面，包含首页的巨幕和导航栏
		->view页面，包含首页的登录模块和内容模块
	admin页面(后台管理页面)
		->index，进入管理提示页面
		->layout，登录加载页面，呈现的主页面
		->error，错误提示页面
		->page，显示comment数据
		->success，成功显示跳转的页面
		->user，管理员与普通用户的页面
		->content-index，blog内容的首页
		->content-edit，blog内容编辑的页面
		->content-add，blog内容添加的页面
		->category-index，内容分类操作的首页
		->category-add，添加blog的内容的种类，添加到首页的导航栏
		->category-edit，编辑设置blog的内容的种类，添加到首页的导航栏
2.交互的ajax
	需要实现的ajax有如下这些方面：
	->index.js
		a.用户注册事件
		b.用户登录事件
		c.用户退出登录事件
		d.获取内容页信息事件
		e.增加分类的事件,在后台管理页面中
	->comment.js
		f.用户初始化事件
		g.渲染评论事件
		h.格式化内容区时间事件
		i.添加评论事件
3.后端的服务
	->热更新-nodemon，服务端三方插件
	->建库
		建立连接数据库，建立相应的数据类型models Schema
	->路由
		在后台管理页面中，封装路由
	->静态资源托管
		对静态页面，css，js，图片等文件进行资源的托管
	->服务端初始化页面，入口文件
		开启服务端口，引入js文件，初始化页面
	->引入相关中间件
		使用body-parser解决post请求等
4.要求的技术栈支持：
	服务端	：nodemon	---->	服务端热更新
	服务端	：express	---->	处理请求和管理路由
	数据库	：mongodb	---->	操作的一切数据保存位置
	数据库	：mongoose	---->	创建数据库数据类型
	模板引擎	：swig		---->	静态页面数据渲染
	缓存		：cookie	---->	保存用户的登陆信息
	中间件	：body-parse---->	处理post请求
	镜像		：doker		---->	给数据库添加镜像，增加安全性
5.主要实现的功能：
	登陆注册页面
	首页分类
	首页文章的分页和文章页面的评论
	后台管理系统的分类的增删改查
	后台管理系统的文章的增删改查
6.业务逻辑
	首页：
		背景页面：引入一个动态科技感的css页面
		主页面：	
			上-导航栏、
			右-时间、面板，当前的访问人数和浏览量
			下-内容页面、包含评论数
			左-折叠面板、内容页面各标题
	后台管理页面：
		主页面：
			上-导航栏
			下-巨幕
			当前流量、数据、关键字查询动态图
		用户管理页面：
			表格上下页面
		分类管理页面：
			分类的首页
			添加分类
		内容管理页面：
			内容首页
			添加内容
-----------------------------------------------------------------------------------------------------------------------------------------------------
二、详细设计实现
1.准备资源文件
	下载bootstrap，整个文件
	安装相关的依赖
	准备相应的文件夹
2.准备静态网页
3.用户登录、注册的验证
4.首页内容的获取
-----------------------------------------------------------------------------------------------------------------------------------------------------
三、搭建后台管理系统
-----------------------------------------------------------------------------------------------------------------------------------------------------
四、亟待解决的问题
1、旁边折叠菜单面板数据的渲染问题；----->已经解决
2、登录、注册页面需要更好的动画效果=>切换页面的时候；
3、首页点击登录注册按钮应该直接让其跳转到不同的页面，可以携带查询字符串解决这个问题；
4、在登录页面中对注册的用户，进行正则验证，同时绑定键盘的enter-event
5、优化功能，在登录注册的时候做ajax请求，在登录的时候密码不正确；在注册的时候两次密码不一致，或者用户名已经注册了；
==>一般这种情况是对与长表单进行验证，短表单可以在按钮上面做触发事件；
6、时钟的背景配色问题，颜色对比比较明显，与blog主题差异较大；----->已经解决
7、点击'阅读全文'按钮，需要先判断是否登录；如果没有登录，需要进行注册，如果登录了，需要在点击的时候触发阅读全文的页面，并且显示评论；----->已经解决
8、底部的分页处理，如果没有登录的时候，就不显示，只有登录的时候才显示；----->已经解决
9、我的简历、需要制作一个全新的页面模板
10、搜索框做suggest，使用局部ajax的请求，也是要先判断是否登录
==>可以尝试性做在搜索框获取焦点的时候，给下方添加一个遮罩层，并且延长搜索框的高度，失去焦点的时候返回正常的状态；
11、优化页面和巨幕的背景图片
==>可以尝试性做一个，更换的图片作为巨幕的图片的同时，会作为body的模糊玻璃的效果；
12、当点击导航上的分类按钮，折叠面板也会跟着分类走，出现有的信息丢失的情况；
==>这个需要做页面优化，当我们已经进入分类内容页或者是内容详情页的时候，侧栏导航功能需要重新给数据、或者丢掉这个功能；
13、前台页面body高度问题，设置100%会出现错误，当前设置的是5000px；
------------------------------------后台管理部分------------------------------------
------------------------------------后台管理部分------------------------------------
------------------------------------后台管理部分------------------------------------
1、后台管理页面：
	小字：欢迎归来！
2、用户管理页面：
	可以设置管理员身份
	对用户列表进行管理操作
	减小页面的宽度
	每页能够显示10条数据
3、分类管理页面：
	每页可以显示10条数据
4、内容管理页面：
	显示10条数据
5、添加的内容字体，可以进行分段、排版的功能
6、当用户不是管理员的身份是无法进入的，需要在从前台传递过来的数据进行判断，防止数据被篡改；